import streamlit as st
import streamlit.components.v1 as components
from PIL import Image
from constant import *

def local_css(file_name):
    with open(file_name) as f:
        st.markdown('<style>{}</style>'.format(f.read()), unsafe_allow_html=True)
        
local_css("style/style.css")

page1 = Image.open("images/page_1.png")
page2 = Image.open("images/page_2.png")
homepage = Image.open("images/homepage.png")
recopage = Image.open("images/recopage.png")
result = Image.open("images/result.png")


# photo = Image.open("images/.jpg")
# st.sidebar.image(photo)
st.sidebar.markdown("[LinkedIn](https://www.linkedin.com/in/quentin-bernardin)",unsafe_allow_html=True)
st.sidebar.markdown("[Profil GitHub](https://github.com/Phebos)",unsafe_allow_html=True)


st.markdown(f'<h1 style="text-align:center;background-color: #90ADC6;font-size:60px;border-radius:2%;">'
            f'<span style="color:#444444;">Portfolio</span></h1>', 
            unsafe_allow_html=True)
st.write("")
# -----------------  WCS P1  -----------------  #
with st.container():
    st.markdown("""""")
    st.subheader("Requ√™tes SQL et Dashboard Power BI")
    with st.expander('Voir le projet'):
        col1,col2 = st.columns([0.5, 0.5])
        with col1:
            st.image(page1)
            st.image(page2)
        with col2:
            st.markdown('<div style="text-align: justify;">Dans le cadre de notre premier projet au sein de la Wild Code School, une entreprise fictive nous a mission√© pour r√©aliser un tableau de bord √† partir des donn√©es d√©j√† disponibles dans leur base de donn√©ee en r√©alisant des requ√™tes SQL.<br><br> J\'√©tais en charge de la partie Ventes au sein de mon groupe, j\'ai donc r√©alis√© des KPI bas√©s sur les ventes au mois et √† l\'ann√©e en comparaison avec les pr√©c√©dents r√©sultats, ces graphiques √©tant filtrables par cat√©gorie de produit vendus pour avoir un peu plus de d√©tail et d\'insight sur les ventes.</div>', unsafe_allow_html=True)
    st.markdown(""" <a href={}> <em>üîó repo Github </a>""".format('https://github.com/Phebos/SQL-querry-and-dashboard'), unsafe_allow_html=True)

    
# ----------------- WCS P2 ----------------- #
with st.container():
    st.markdown("""""")
    st.subheader('Dashboard Tableau, syst√®me de recommandation de film et site via le framework Django')
    with st.expander('Voir le projet'):
        col1,col2 = st.columns([0.5, 0.5])
        with col1:
            st.image(homepage)
            st.image(recopage)
            st.image(result)
        with col2:
            st.markdown('<div style="text-align: justify;">Dans le cadre de notre deuxi√®me projet au sein de la Wild Code School, un cinema fictif en perte de vitesse situ√© dans la Creuse nous a mission√© pour cr√©er un syst√®me de recommendation de film ainsi qu\'un tableau de bord bas√© sur notre s√©lection de film choisis au pr√©alable.<br><br> Nous devions donc dans un premier temps faire un choix sur la s√©lection de film. Nous avons choisis de mettre en avant le cin√©ma asiatique au cours de ce projet. Les donn√©es ont √©t√© r√©cup√©r√©es √† partir des bases de donn√©es imdb et tmdb et enrichies par webscrapping. Elles ont par la suite √©t√©s trait√©s en Python √† l\'aide de la librairie Panda pour ensuite √™tre exploitable sur Tableau ainsi que le site web r√©alis√© avec le framework Django. Le syst√®me de recommendation se base sur un algorithme K-Nearest Neighbors effectu√© sur les donn√©es textuelles pr√©alablement trait√©es (telles que les genres, mots cl√©s et synopsis) √† l\'aide de Natural Language Processing.</div>', unsafe_allow_html=True)

    st.markdown(""" <a href={}> <em>üîó repo Github </a>""".format('https://github.com/Phebos/movie-recommendation'), unsafe_allow_html=True)

# -----------------  WCS P3  -----------------  #

# --------------  Pipeline ELT  --------------  #
